//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GET.WebForms.ServiceClienteWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceClienteWcf.IServiceCliente")]
    public interface IServiceCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Listar", ReplyAction="http://tempuri.org/IServiceCliente/ListarResponse")]
        GTI.API.Models.Cliente[] Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Listar", ReplyAction="http://tempuri.org/IServiceCliente/ListarResponse")]
        System.Threading.Tasks.Task<GTI.API.Models.Cliente[]> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Obter", ReplyAction="http://tempuri.org/IServiceCliente/ObterResponse")]
        GTI.API.Models.Cliente Obter(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Obter", ReplyAction="http://tempuri.org/IServiceCliente/ObterResponse")]
        System.Threading.Tasks.Task<GTI.API.Models.Cliente> ObterAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Incluir", ReplyAction="http://tempuri.org/IServiceCliente/IncluirResponse")]
        int Incluir(GTI.API.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Incluir", ReplyAction="http://tempuri.org/IServiceCliente/IncluirResponse")]
        System.Threading.Tasks.Task<int> IncluirAsync(GTI.API.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Alterar", ReplyAction="http://tempuri.org/IServiceCliente/AlterarResponse")]
        void Alterar(GTI.API.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Alterar", ReplyAction="http://tempuri.org/IServiceCliente/AlterarResponse")]
        System.Threading.Tasks.Task AlterarAsync(GTI.API.Models.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Excluir", ReplyAction="http://tempuri.org/IServiceCliente/ExcluirResponse")]
        void Excluir(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCliente/Excluir", ReplyAction="http://tempuri.org/IServiceCliente/ExcluirResponse")]
        System.Threading.Tasks.Task ExcluirAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceClienteChannel : GET.WebForms.ServiceClienteWcf.IServiceCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClienteClient : System.ServiceModel.ClientBase<GET.WebForms.ServiceClienteWcf.IServiceCliente>, GET.WebForms.ServiceClienteWcf.IServiceCliente {
        
        public ServiceClienteClient() {
        }
        
        public ServiceClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GTI.API.Models.Cliente[] Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<GTI.API.Models.Cliente[]> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public GTI.API.Models.Cliente Obter(int id) {
            return base.Channel.Obter(id);
        }
        
        public System.Threading.Tasks.Task<GTI.API.Models.Cliente> ObterAsync(int id) {
            return base.Channel.ObterAsync(id);
        }
        
        public int Incluir(GTI.API.Models.Cliente cliente) {
            return base.Channel.Incluir(cliente);
        }
        
        public System.Threading.Tasks.Task<int> IncluirAsync(GTI.API.Models.Cliente cliente) {
            return base.Channel.IncluirAsync(cliente);
        }
        
        public void Alterar(GTI.API.Models.Cliente cliente) {
            base.Channel.Alterar(cliente);
        }
        
        public System.Threading.Tasks.Task AlterarAsync(GTI.API.Models.Cliente cliente) {
            return base.Channel.AlterarAsync(cliente);
        }
        
        public void Excluir(int id) {
            base.Channel.Excluir(id);
        }
        
        public System.Threading.Tasks.Task ExcluirAsync(int id) {
            return base.Channel.ExcluirAsync(id);
        }
    }
}
